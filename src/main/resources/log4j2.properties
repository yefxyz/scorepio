# Log4j 2 配置。

name=PropertiesConfig

property.logPath = logs
property.logRollingPath = logs/rolling
property.logPrefix = scorepio

# 控制台输出。
appender.console.type = Console
appender.console.name = stdout
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} %m%n

# 文件输出。
appender.test.type = RollingFile
appender.test.name = file_test
appender.test.fileName = ${logPath}/${logPrefix}-test.log
appender.test.filePattern = ${logRollingPath}/${logPrefix}-test-%d{yy-MM-dd}-%i.log.gz
appender.test.layout.type = PatternLayout
appender.test.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} %m%n
appender.test.policies.type = Policies
appender.test.policies.time.type = TimeBasedTriggeringPolicy
appender.test.policies.time.modulate = true
appender.test.policies.size.type = SizeBasedTriggeringPolicy
appender.test.policies.size.size=10MB
appender.test.strategy.type = DefaultRolloverStrategy
appender.test.strategy.max = 10
 
appender.core.type = RollingFile
appender.core.name = file_core
appender.core.fileName = ${logPath}/${logPrefix}-core.log
appender.core.filePattern = ${logRollingPath}/${logPrefix}-core-%d{yy-MM-dd}-%i.log.gz
appender.core.layout.type = PatternLayout
appender.core.layout.pattern = [%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} [%t] %c{1} %m%n
appender.core.policies.type = Policies
appender.core.policies.time.type = TimeBasedTriggeringPolicy
appender.core.policies.time.modulate = true
appender.core.policies.size.type = SizeBasedTriggeringPolicy
appender.core.policies.size.size=10MB
appender.core.strategy.type = DefaultRolloverStrategy
appender.core.strategy.max = 10

# com.andre.test日志。
logger.test.name = com.andre.test
logger.test.level = info
logger.test.additivity = false
logger.test.appenderRef.stdout.ref = stdout
logger.test.appenderRef.test.ref = file_test

# com.andre.core日志。
logger.core.name = com.andre.core
logger.core.level = info
logger.core.additivity = false
logger.core.appenderRef.core.ref = file_core

rootLogger.level = info
rootLogger.appenderRef.root.ref = stdout